;r16 = Position of Text Byte to read


0002a838: 92020000 lbu r2,0x0000(r16)
0002a83c: 00000000 nop
0002a840: 104000a1 beq r2,r0,0x0002aac8				;00 = ###END OF TEXT BLOCK?


0002a844: 000a1c00 sll r3,r10,0x10						;r10 = 1?


0002a848: 92040000 lbu r4,0x0000(r16)
0002a84c: 26100001 addiu r16,r16,0x0001
0002a850: 92050000 lbu r5,0x0000(r16)					;load and 

0002a854: 00031c03 sra r3,r3,0x10
0002a858: 00031040 sll r2,r3,0x01
0002a85c: 00431021 addu r2,r2,r3
0002a860: 00021040 sll r2,r2,0x01
0002a864: 27a30010 addiu r3,r29,0x0010				;r29 + 0x10 = base RAM position to draw to
0002a868: 00623021 addu r6,r3,r2							; r2 is calculated as no. character x 6
0002a86c: 3402818f ori r2,r0,0x818f

0002a870: 00042200 sll r4,r4,0x08
0002a874: 00852021 addu r4,r4,r5							


0002a878: 3083ffff andi r3,r4,0xffff					;r3 & r4 now the actual Text halfword in total!
0002a87c: 10620092 beq r3,r2,0x0002aac8				;If 818f = ###NEW LINE
0002a880: 26100001 addiu r16,r16,0x0001				;Inc. Position

0002a884: 34029fff ori r2,r0,0x9fff
0002a888: 0043102b sltu r2,r2,r3
0002a88c: 14400002 bne r2,r0,0x0002a898				;if text halfword >9fff -- seems to be used to skip part of SJIS encoding?



;Routine to find SJIS Encoding
0002a890: 24823ec0 addiu r2,r4,0x3ec0
0002a894: 24827ec0 addiu r2,r4,0x7ec0
0002a898: 3042ffff andi r2,r2,0xffff
0002a89c: 00024a02 srl r9,r2,0x08
0002a8a0: 00091880 sll r3,r9,0x02
0002a8a4: 00751821 addu r3,r3,r21							;r21 = 800ca2e4 SJIS Encoding Tables Pointer Table
0002a8a8: 8c680000 lw r8,0x0000(r3)
0002a8ac: 00000000 nop
0002a8b0: 91030000 lbu r3,0x0000(r8)
0002a8b4: 304500ff andi r5,r2,0x00ff
0002a8b8: 00a3182b sltu r3,r5,r3
0002a8bc: 14600011 bne r3,r0,0x0002a904
0002a8c0: 00003821 addu r7,r0,r0
0002a8c4: 01001821 addu r3,r8,r0


;Loop to find SJIS Encoding!
0002a8c8: 90620000 lbu r2,0x0000(r3)
0002a8cc: 00a02021 addu r4,r5,r0
0002a8d0: 10440006 beq r2,r4,0x0002a8ec
0002a8d4: 24630001 addiu r3,r3,0x0001
0002a8d8: 90620000 lbu r2,0x0000(r3)
0002a8dc: 00000000 nop
0002a8e0: 0082102b sltu r2,r4,r2
0002a8e4: 1040fff8 beq r2,r0,0x0002a8c8
0002a8e8: 24e70001 addiu r7,r7,0x0001


;Found SJIS Encoding!
0002a8ec: 01071021 addu r2,r8,r7
0002a8f0: 90420000 lbu r2,0x0000(r2)
0002a8f4: 00000000 nop
0002a8f8: 0082102b sltu r2,r4,r2
0002a8fc: 10400004 beq r2,r0,0x0002a910
0002a900: 00091080 sll r2,r9,0x02
0002a904: 3c02800d lui r2,0x800d
0002a908: 0800aa4a j 0x0002a928
0002a90c: 2445a38c addiu r5,r2,0xa38c
0002a910: 00541021 addu r2,r2,r20
0002a914: 000718c0 sll r3,r7,0x03
0002a918: 00671821 addu r3,r3,r7
0002a91c: 8c420000 lw r2,0x0000(r2)
0002a920: 00031840 sll r3,r3,0x01
0002a924: 00432821 addu r5,r2,r3
0002a928: 00003821 addu r7,r0,r0
0002a92c: 24a40004 addiu r4,r5,0x0004


0002a930: 94a20000 lhu r2,0x0000(r5)				;starts loading the actual graphics data
0002a934: 00000000 nop
0002a938: 30421111 andi r2,r2,0x1111
0002a93c: a4c20000 sh r2,0x0000(r6)
0002a940: 9482fffe lhu r2,-0x0002(r4)
0002a944: 24c60002 addiu r6,r6,0x0002
0002a948: 30421111 andi r2,r2,0x1111
0002a94c: a4c20000 sh r2,0x0000(r6)
0002a950: 94820000 lhu r2,0x0000(r4)
0002a954: 24c60002 addiu r6,r6,0x0002
0002a958: 30421111 andi r2,r2,0x1111
0002a95c: a4c20000 sh r2,0x0000(r6)
0002a960: 86230004 lh r3,0x0004(r17)
0002a964: 00000000 nop
0002a968: 00031040 sll r2,r3,0x01
0002a96c: 00431021 addu r2,r2,r3
0002a970: 00021040 sll r2,r2,0x01
0002a974: 00c21021 addu r2,r6,r2
0002a978: 94a30000 lhu r3,0x0000(r5)
0002a97c: 2446fffc addiu r6,r2,0xfffc
0002a980: 00031842 srl r3,r3,0x01
0002a984: 30631111 andi r3,r3,0x1111
0002a988: a4c30000 sh r3,0x0000(r6)
0002a98c: 9482fffe lhu r2,-0x0002(r4)
0002a990: 24c60002 addiu r6,r6,0x0002
0002a994: 00021042 srl r2,r2,0x01
0002a998: 30421111 andi r2,r2,0x1111
0002a99c: a4c20000 sh r2,0x0000(r6)
0002a9a0: 94820000 lhu r2,0x0000(r4)
0002a9a4: 24c60002 addiu r6,r6,0x0002
0002a9a8: 00021042 srl r2,r2,0x01
0002a9ac: 30421111 andi r2,r2,0x1111
0002a9b0: a4c20000 sh r2,0x0000(r6)
0002a9b4: 86230004 lh r3,0x0004(r17)
0002a9b8: 00000000 nop
0002a9bc: 00031040 sll r2,r3,0x01
0002a9c0: 00431021 addu r2,r2,r3
0002a9c4: 00021040 sll r2,r2,0x01
0002a9c8: 00c21021 addu r2,r6,r2
0002a9cc: 94a30000 lhu r3,0x0000(r5)
0002a9d0: 2446fffc addiu r6,r2,0xfffc
0002a9d4: 00031882 srl r3,r3,0x02
0002a9d8: 30631111 andi r3,r3,0x1111
0002a9dc: a4c30000 sh r3,0x0000(r6)
0002a9e0: 9482fffe lhu r2,-0x0002(r4)
0002a9e4: 24c60002 addiu r6,r6,0x0002
0002a9e8: 00021082 srl r2,r2,0x02
0002a9ec: 30421111 andi r2,r2,0x1111
0002a9f0: a4c20000 sh r2,0x0000(r6)
0002a9f4: 94820000 lhu r2,0x0000(r4)
0002a9f8: 24c60002 addiu r6,r6,0x0002
0002a9fc: 00021082 srl r2,r2,0x02
0002aa00: 30421111 andi r2,r2,0x1111
0002aa04: a4c20000 sh r2,0x0000(r6)
0002aa08: 86230004 lh r3,0x0004(r17)
0002aa0c: 00000000 nop
0002aa10: 00031040 sll r2,r3,0x01
0002aa14: 00431021 addu r2,r2,r3
0002aa18: 00021040 sll r2,r2,0x01
0002aa1c: 00c21021 addu r2,r6,r2
0002aa20: 2446fffc addiu r6,r2,0xfffc
0002aa24: 00071400 sll r2,r7,0x10
0002aa28: 00021403 sra r2,r2,0x10
0002aa2c: 28420002 slti r2,r2,0x0002
0002aa30: 10400018 beq r2,r0,0x0002aa94
0002aa34: 24e20001 addiu r2,r7,0x0001
0002aa38: 94a20000 lhu r2,0x0000(r5)
0002aa3c: 24a50006 addiu r5,r5,0x0006
0002aa40: 000210c2 srl r2,r2,0x03
0002aa44: 30421111 andi r2,r2,0x1111
0002aa48: a4c20000 sh r2,0x0000(r6)
0002aa4c: 9482fffe lhu r2,-0x0002(r4)
0002aa50: 24c60002 addiu r6,r6,0x0002
0002aa54: 000210c2 srl r2,r2,0x03
0002aa58: 30421111 andi r2,r2,0x1111
0002aa5c: a4c20000 sh r2,0x0000(r6)
0002aa60: 94820000 lhu r2,0x0000(r4)
0002aa64: 24c60002 addiu r6,r6,0x0002
0002aa68: 000210c2 srl r2,r2,0x03
0002aa6c: 30421111 andi r2,r2,0x1111
0002aa70: a4c20000 sh r2,0x0000(r6)
0002aa74: 86230004 lh r3,0x0004(r17)
0002aa78: 24840006 addiu r4,r4,0x0006
0002aa7c: 00031040 sll r2,r3,0x01
0002aa80: 00431021 addu r2,r2,r3
0002aa84: 00021040 sll r2,r2,0x01
0002aa88: 00c21021 addu r2,r6,r2
0002aa8c: 2446fffc addiu r6,r2,0xfffc
0002aa90: 24e20001 addiu r2,r7,0x0001						;Finishes copying graphic data into RAM
0002aa94: 00403821 addu r7,r2,r0
0002aa98: 00021400 sll r2,r2,0x10
0002aa9c: 00021403 sra r2,r2,0x10
0002aaa0: 28420003 slti r2,r2,0x0003
0002aaa4: 1440ffa2 bne r2,r0,0x0002a930
0002aaa8: 25420001 addiu r2,r10,0x0001
0002aaac: 00405021 addu r10,r2,r0
0002aab0: 00021400 sll r2,r2,0x10
0002aab4: 86230004 lh r3,0x0004(r17)
0002aab8: 00021403 sra r2,r2,0x10
0002aabc: 0043102a slt r2,r2,r3									;Checks if Character No. exceeds limit
0002aac0: 1440ff5d bne r2,r0,0x0002a838
0002aac4: 26520001 addiu r18,r18,0x0001




0002aac8: 000a1400 sll r2,r10,0x10
0002aacc: 86230004 lh r3,0x0004(r17)
0002aad0: 00021403 sra r2,r2,0x10
0002aad4: 1443000c bne r2,r3,0x0002ab08
0002aad8: 00000000 nop
0002aadc: 92020000 lbu r2,0x0000(r16)
0002aae0: 00000000 nop
0002aae4: 10400008 beq r2,r0,0x0002ab08
0002aae8: 00021200 sll r2,r2,0x08
0002aaec: 92030001 lbu r3,0x0001(r16)
0002aaf0: 00000000 nop
0002aaf4: 00431021 addu r2,r2,r3
0002aaf8: 3403818f ori r3,r0,0x818f
0002aafc: 14430002 bne r2,r3,0x0002ab08
0002ab00: 00000000 nop
0002ab04: 26100002 addiu r16,r16,0x0002
0002ab08: 0c02ce18 jal 0x000b3860
0002ab0c: 00002021 addu r4,r0,r0
0002ab10: 27a40580 addiu r4,r29,0x0580
0002ab14: 0c02cec3 jal 0x000b3b0c
0002ab18: 27a50010 addiu r5,r29,0x0010
0002ab1c: 26620001 addiu r2,r19,0x0001
0002ab20: 00409821 addu r19,r2,r0
0002ab24: 97a30582 lhu r3,0x0582(r29)
0002ab28: 00021400 sll r2,r2,0x10
0002ab2c: 2463000b addiu r3,r3,0x000b
0002ab30: a7a30582 sh r3,0x0582(r29)
0002ab34: 86230006 lh r3,0x0006(r17)